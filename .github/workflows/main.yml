# name: Build and Push Golang Image to AWS ECR
# on:
#   push:
#     branches: [ main ]
# jobs:
#   build-and-push:
#     name: Build and Push to ECR
#     runs-on: python3-slim-buster 
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v2

#     - name: Configure AWS credentials
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: us-east-1

#     - name: Login to Amazon ECR
#       id: login-ecr
#       uses: aws-actions/amazon-ecr-login@v1

#     - name: Automatic Tagging of Releases
#       id: increment-git-tag
#       run: |
#         bash ./git_update.sh -v major
#     - name: Build, Tag, and Push the Image to Amazon ECR
#       id: build-image
#       env:
#         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#         ECR_REPOSITORY: riva
#         IMAGE_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
#       run: |
#         docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
#         docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

# name: Python application

# on:
#   push:
#    branches: [ main ]
#   pull_request:
#     branches: [ main ]
      
# jobs:
#   build:

#     runs-on: python3-slim-buster

#     steps:
#     - uses: actions/checkout@v1
#     - name: Build & Push Image
#       run: |
#         echo "${{ secrets.DOCKERPW }}" | docker login -u "heet009" --password-stdin
#         docker image build -t heet009/try:v1 .
#         docker push heet009/try:v1


name: ci

on:
  push:
    branches:
      - 'main'

jobs:
  docker:
    runs-on: python3-slim-buster
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: user/app:latest
